package Commands;

import java.io.File;
import java.io.IOException;

import me.Chris.SwiftlyCrafted.main;

import org.bukkit.Bukkit;
import org.bukkit.ChatColor;
import org.bukkit.command.Command;
import org.bukkit.command.CommandExecutor;
import org.bukkit.command.CommandSender;
import org.bukkit.configuration.file.FileConfiguration;
import org.bukkit.configuration.file.YamlConfiguration;
import org.bukkit.entity.Player;

public class RankCommand implements CommandExecutor {

	main plugin;
	RankSubCommands rsc;
	
	public RankCommand(main passedPlugin){
		rsc = new RankSubCommands(passedPlugin);
		this.plugin = passedPlugin;
	}
	
	@Override
	public boolean onCommand(CommandSender sender, Command cmd, String label,
			String[] args) {
		Player p = (Player) sender;
		if(args.length == 0){
			p.sendMessage(ChatColor.DARK_RED + "[Error] " + ChatColor.RED + "Not enough arguments! Correct form of this command is: /rank <player name> <rank>");
		}
		if(args.length == 1){
			p.sendMessage(ChatColor.DARK_RED + "[Error] " + ChatColor.RED + "Not enough arguments! Correct form of this command is: /rank <player name> <rank>");
		}
		if(args.length== 2){
			final Player target = Bukkit.getPlayerExact(args[0]);
			File playersDir = new File(this.plugin.getDataFolder() + File.separator + "players");
			if(!playersDir.exists()){
			    playersDir.mkdir();
			}
			 
			File playerFile = new File(this.plugin.getDataFolder() + File.separator + "players" + File.separator + target.getName() + ".yml");
			if(!playerFile.exists()){
			     try {
					playerFile.createNewFile();
				} catch (IOException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				} // needs try catch block
			}
			FileConfiguration fc = YamlConfiguration.loadConfiguration(playerFile);
			if(args[1].equalsIgnoreCase("newbie")){
				rsc.executeNewbieCommand(p, args);
			}
			if(args[1].equalsIgnoreCase("master")){
				rsc.executeMasterCommand(p, args);
			}
			if(args[1].equalsIgnoreCase("elitemaster")){
				rsc.executeEliteMasterCommand(p, args);
			}
			if(args[1].equalsIgnoreCase("mod")){
				rsc.executeModCommand(p, args);
			}
			if(args[1].equalsIgnoreCase("eldermod")){
				rsc.executeElderModCommand(p, args);
			}
			if(args[1].equalsIgnoreCase("admin")){
				rsc.executeAdminModCommand(p, args);
			}
			if(args[1].equalsIgnoreCase("op")){
				rsc.executeFounderCommand(p, args);
			}
		}
		
		return false;
	}

}
