package me.Chris.SwiftlyCrafted;

import java.util.Random;

import me.Chris.SwiftlyCrafted.Hub.main;

import org.bukkit.Bukkit;
import org.bukkit.Sound;
import org.bukkit.block.BlockFace;
import org.bukkit.entity.Player;
import org.bukkit.event.EventHandler;
import org.bukkit.event.Listener;
import org.bukkit.event.entity.EntityDamageEvent;
import org.bukkit.event.entity.EntityDamageEvent.DamageCause;
import org.bukkit.event.player.PlayerMoveEvent;
import org.bukkit.util.Vector;

public class FallListener implements Listener {
	private main plugin;
	Random r = new Random();
	public FallListener(main Plugin) {
		this.plugin = Plugin;	
	}
	@SuppressWarnings("deprecation")
	@EventHandler
	public void onCrunch(PlayerMoveEvent e) {
		try {
		if(e.getFrom().getBlockY() > e.getTo().getBlockY()) {
		        if(!e.getTo().getBlock().getRelative(BlockFace.DOWN).isLiquid()) {
		        		if(e.getTo().getBlock().getLocation().subtract(0, 1, 0).getBlock().getTypeId() == 100 ||
		        			e.getTo().getBlock().getLocation().subtract(0, 3, 0).getBlock().getTypeId() == 100 ||
		        		    e.getTo().getBlock().getLocation().subtract(0, 2, 0).getBlock().getTypeId() == 100 || 
		        			e.getTo().getBlock().getLocation().subtract(0, 4, 0).getBlock().getTypeId() == 100) {
		        			double randomDouble = r.nextDouble();
		        			double result = 0.9 + (1.7 - 0.9) * randomDouble;
		        			e.getPlayer().setVelocity(new Vector(0, 5.0 + result, 0));
		        			
		        			e.getPlayer().playSound(e.getPlayer().getLocation(), Sound.CHICKEN_EGG_POP, 4, 4);
		        	       	}else{
		        	       	Bukkit.getServer().getPluginManager().callEvent(new HitGroundEvent(e.getPlayer()));
		          	}
			  }
		    }catch (Exception ex) {
		    }
		}
	@EventHandler
	public void onLand(EntityDamageEvent e) {
		Player p = (Player) e.getEntity();
		if(e.getCause().equals(DamageCause.FALL)) {
			e.setCancelled(true);
			p.setFallDistance(0.0f);
			e.setDamage(0.0);
		}
	}
}
