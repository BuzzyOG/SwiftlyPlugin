package me.Chris.SwiftlyCrafted;

import java.io.File;
import java.io.IOException;
import java.util.List;

import me.Chris.SwiftlyCrafted.main;

import org.bukkit.Bukkit;
import org.bukkit.ChatColor;
import org.bukkit.GameMode;
import org.bukkit.Material;
import org.bukkit.configuration.file.FileConfiguration;
import org.bukkit.configuration.file.YamlConfiguration;
import org.bukkit.entity.Player;
import org.bukkit.event.EventHandler;
import org.bukkit.event.Listener;
import org.bukkit.event.player.PlayerJoinEvent;
import org.bukkit.inventory.ItemStack;
import org.bukkit.inventory.meta.ItemMeta;

public class JoinListener implements Listener{
	
	private final main plugin;
	 
	public JoinListener(main plugin) {
        // Register the listener
        plugin.getServer().getPluginManager().registerEvents(this, plugin);
        
        this.plugin = plugin;
	}
	
	//File playerFile;
	
	//public static FileConfiguration playerFile;
	
	@EventHandler
	public void onJoin(PlayerJoinEvent event){
		final Player p = event.getPlayer();
		
		File playersDir = new File(this.plugin.getDataFolder() + File.separator + "players");
		if(!playersDir.exists()){
		    playersDir.mkdir();
		}
		 
		File playerFile = new File(this.plugin.getDataFolder() + File.separator + "players" + File.separator + p.getName() + ".yml");
		if(!playerFile.exists()){
		     try {
				playerFile.createNewFile();
			} catch (IOException e) {
				// TODO Autogenerated catch block
				e.printStackTrace();
			} // needs try catch block
		}
		FileConfiguration fc = YamlConfiguration.loadConfiguration(playerFile);
		
		/*playerfile = new File(this.plugin.getDataFolder() + File.separator + "userdata" + File.separator + p.getPlayer().getName() + ".yml");
	    if(!playerfile.exists()) {
	        try {
	        	playerfile.createNewFile();
	        } catch(IOException x) {
	            x.printStackTrace();
	        }
	    }
	    fileplayer = YamlConfiguration.loadConfiguration(playerfile);*/
	    
	    ItemStack mainmenu = new ItemStack(Material.CHEST);
	    ItemMeta im = mainmenu.getItemMeta();
	    im.setDisplayName(ChatColor.GREEN + "" + ChatColor.BOLD + "Main Menu");
	    Dye oranged = new Dye();
            ItemStack orange = oranged.toItemStack(1);
            oranged.setColor(DyeColor.ORANGE);
            ItemMeta imo = orange.getItemMeta();
            imo.setDisplayName(ChatColor.RED + "" + ChatColor.BOLD + "Hub items!");
            orange.setDurability((short) 14);
	    orange.setItemMeta(imo);
	    e.getPlayer().getInventory().setItem(7, orange);
		mainmenu.setItemMeta(im);
		
		p.getInventory().clear();
		p.getInventory().setItem(4, mainmenu);
		
		event.setJoinMessage(null);
		
		p.sendMessage(ChatColor.AQUA + "Welcome to SwiftlyCrafted " + ChatColor.YELLOW + p.getName() + ChatColor.AQUA + "!");
		
		if(p.hasPlayedBefore() == true){
			if(fc.getString("rank").equals("newbie")){
				fc.set("rank", "newbie");
				try {
					fc.save(playerFile);
				} catch (IOException e) {
					e.printStackTrace();
				}
				p.setCanPickupItems(false);
				p.setAllowFlight(false);
				p.setOp(false);
				p.setDisplayName(ChatColor.GRAY + p.getName() + ChatColor.WHITE);
				Bukkit.getServer().getScheduler().scheduleSyncRepeatingTask(this.plugin, new Runnable(){
			        @Override
			        public void run() {
			        	p.setFoodLevel(20);
			    		p.setHealth(20);
			                if(p.getLocation().getBlockY() < 0){
			                	p.teleport(p.getWorld().getSpawnLocation());
			                }
			        }
				}, 0, 1);
			}else if(fc.getString("rank").equals("master")){
				fc.set("rank", "master");
				try {
					fc.save(playerFile);
				} catch (IOException e) {
					e.printStackTrace();
				}
				p.setAllowFlight(false);
				p.setCanPickupItems(false);
				p.setOp(false);
				p.setDisplayName(ChatColor.YELLOW + "[Master] " + ChatColor.GRAY + p.getName() + ChatColor.WHITE);
				Bukkit.getServer().getScheduler().scheduleSyncRepeatingTask(this.plugin, new Runnable(){
			        @Override
			        public void run() {
			        	p.setFoodLevel(20);
			    		p.setHealth(20);
			                if(p.getLocation().getBlockY() < 0){
			                	p.teleport(p.getWorld().getSpawnLocation());
			                }
			        }
				}, 0, 1);	
			}else if(fc.getString("rank").equals("eldermaster")){
				fc.set("rank", "eldermaster");
				try {
					fc.save(playerFile);
				} catch (IOException e) {
					e.printStackTrace();
				}
				p.setAllowFlight(false);
				p.setCanPickupItems(false);
				p.setOp(false);
				p.setDisplayName(ChatColor.GREEN + "[EliteMaster] " + ChatColor.GRAY + p.getName() + ChatColor.WHITE);
				Bukkit.getServer().getScheduler().scheduleSyncRepeatingTask(this.plugin, new Runnable(){
			        @Override
			        public void run() {
			        	p.setFoodLevel(20);
			    		p.setHealth(20);
			                if(p.getLocation().getBlockY() < 0){
			                	p.teleport(p.getWorld().getSpawnLocation());
			                }
			        }
				}, 0, 1);
			}else if(fc.getString("rank").equals("mod")){
				fc.set("rank", "mod");
				try {
					fc.save(playerFile);
				} catch (IOException e) {
					e.printStackTrace();
				}
				p.setAllowFlight(false);
				p.setCanPickupItems(false);
				p.setOp(false);
				p.setDisplayName(ChatColor.AQUA + "[Mod] " + ChatColor.GRAY + p.getName() + ChatColor.WHITE);
				Bukkit.getServer().getScheduler().scheduleSyncRepeatingTask(this.plugin, new Runnable(){
			        @Override
			        public void run() {
			        	p.setFoodLevel(20);
			    		p.setHealth(20);
			                if(p.getLocation().getBlockY() < 0){
			                	p.teleport(p.getWorld().getSpawnLocation());
			                }
			        }
				}, 0, 1);
			}else if(fc.getString("rank").equals("admin")){
				fc.set("rank", "admin");
				try {
					fc.save(playerFile);
				} catch (IOException e) {
					e.printStackTrace();
				}
				p.setAllowFlight(true);
				p.setCanPickupItems(true);
				p.setOp(false);
				p.setDisplayName(ChatColor.RED + "[Admin] " + ChatColor.GRAY + p.getName() + ChatColor.WHITE);
				Bukkit.getServer().getScheduler().scheduleSyncRepeatingTask(this.plugin, new Runnable(){
			        @Override
			        public void run() {
			        	p.setFoodLevel(20);
			    		p.setHealth(20);
			                if(p.getLocation().getBlockY() < 0){
			                	p.teleport(p.getWorld().getSpawnLocation());
			                }
			        }
				}, 0, 1);
			}
			else if(fc.getString("rank").equals("eldermod")){
				fc.set("rank", "eldermod");
				try {
					fc.save(playerFile);
				} catch (IOException e) {
					e.printStackTrace();
				}
				p.setAllowFlight(false);
				p.setCanPickupItems(true);
				p.setOp(false);
				p.setDisplayName(ChatColor.GOLD + "[ElderMod] " + ChatColor.GRAY + p.getName() + ChatColor.WHITE);
				Bukkit.getServer().getScheduler().scheduleSyncRepeatingTask(this.plugin, new Runnable(){
			        @Override
			        public void run() {
			        	p.setFoodLevel(20);
			    		p.setHealth(20);
			                if(p.getLocation().getBlockY() < 0){
			                	p.teleport(p.getWorld().getSpawnLocation());
			                }
			        }
				}, 0, 1);
			}else if(fc.getString("rank").equals("op")){
				fc.set("rank", "op");
				try {
					fc.save(playerFile);
				} catch (IOException e) {
					e.printStackTrace();
				}
				p.setAllowFlight(true);
				p.setCanPickupItems(true);
				p.setOp(true);
				p.setDisplayName(ChatColor.DARK_RED + "[Creator] " + ChatColor.GRAY + p.getName() + ChatColor.WHITE);
				Bukkit.getServer().getScheduler().scheduleSyncRepeatingTask(this.plugin, new Runnable(){
			        @Override
			        public void run() {
			        	p.setFoodLevel(20);
			    		p.setHealth(20);
			                if(p.getLocation().getBlockY() < 0){
			                	p.teleport(p.getWorld().getSpawnLocation());
			                }
			        }
				}, 0, 1);
			}
		}else{
			p.setAllowFlight(false);
			p.setDisplayName(ChatColor.GRAY + p.getName() + ChatColor.WHITE);
			p.setGameMode(GameMode.SURVIVAL);
			p.setExp(0);
			p.setLevel(1);
			p.setFoodLevel(20);
			fc.set("rank", "newbie");
			try {
				fc.save(playerFile);
			} catch (IOException e) {
				// TODO Autogenerated catch block
				e.printStackTrace();
			}
			Bukkit.getServer().getScheduler().scheduleSyncRepeatingTask(this.plugin, new Runnable(){
		        @Override
		        public void run() {
		        	p.setFoodLevel(20);
		    		p.setHealth(20);
		                if(p.getLocation().getBlockY() < 0){
		                	p.teleport(p.getWorld().getSpawnLocation());
		                }
		        }
			}, 0, 1);
		}
	}
	
}
